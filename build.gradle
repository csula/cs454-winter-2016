apply plugin: 'java'
apply plugin: 'eclipse'

sourceCompatibility = 1.8
version = '1.0'

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.google.guava:guava:18.0'
    compile 'org.elasticsearch:elasticsearch:2.2.0'

    testCompile group: 'junit', name: 'junit', version: '4.+'
}

test {
    // show standard out and standard error of the test JVM(s) on the console
    testLogging.showStandardStreams = true
}

defaultTasks 'clean', 'hello'

task helloJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Hello Jar Example',
                'Implementation-Version': version,
                'Main-Class': 'edu.csula.cs454.example.HelloWorld'
    }
    baseName = 'hello'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task hello(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath

    main = 'edu.csula.cs454.example.HelloWorld'

    // simple defensive programming to define optional arguments
    if (project.hasProperty("arguments")) {
        args arguments.split(" ")
    }
}

task homedepotSearch(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath

    main = 'edu.csula.cs454.es.Application'

    // simple defensive programming to define optional arguments
    if (project.hasProperty("arguments")) {
        args arguments.split(" ")
    }
}

task readFile(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath

    main = 'edu.csula.cs454.example.FileRead'
}
